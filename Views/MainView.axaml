<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:Avalonia.Markup.Xaml.Converters;assembly=Avalonia.Markup.Xaml"
             xmlns:lang="clr-namespace:MercuryMapper.Assets.Lang"
             mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="800"
             x:Class="MercuryMapper.Views.MainView">
    
    <UserControl.Resources>
        <converters:ColorToBrushConverter x:Key="ColorToBrush" />
    </UserControl.Resources>
    
    <Grid ColumnDefinitions="Auto,*, Auto" RowDefinitions="Auto,*,Auto">
        
        <!-- Title Bar -->
        <Grid ColumnDefinitions="Auto,*" RowDefinitions="*" Grid.Row="0" Grid.ColumnSpan="3" Grid.Column="0">
            <Menu Grid.Column="0" Background="{DynamicResource TitleBar}" Height="40">
                <MenuItem Width="40">
                    <MenuItem.Header>
                        <Image Source="/Assets/AppIcon.ico" Width="20"/>
                    </MenuItem.Header>
                    <TextBlock Name="VersionText" Text="WIP"/>
                </MenuItem>
                
                <MenuItem Header="{x:Static lang:Resources.MenuHeader_File}" >
                    <MenuItem Header="{x:Static lang:Resources.Menu_New}" Click="MenuItemNew_OnClick" Name="MenuItemNew" 
                              InputGesture="Ctrl+N" />
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Open}" Click="MenuItemOpen_OnClick" Name="MenuItemOpen" 
                              InputGesture="Ctrl+O" />
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Save}" Click="MenuItemSave_OnClick" InputGesture="Ctrl+S" Name="MenuItemSave" >
                        <MenuItem.Icon>
                            <PathIcon Data="{DynamicResource IconSave}" Width="15"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_SaveAs}" Click="MenuItemSaveAs_OnClick" InputGesture="Ctrl+Shift+S" Name="MenuItemSaveAs" >
                        <MenuItem.Icon>
                            <PathIcon Data="{DynamicResource IconSaveAs}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                    <Separator/>
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Export}" >
                        <MenuItem Header="{x:Static lang:Resources.Menu_ExportMercury}" Click="MenuItemExportMercury_OnClick" />
                        <MenuItem Header="{x:Static lang:Resources.Menu_ExportSaturn}" Click="MenuItemExportSaturn_OnClick" />
                    </MenuItem>
                    
                    <Separator/>
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Settings}" Click="MenuItemSettings_OnClick" Name="MenuItemSettings" > 
                        <MenuItem.Icon>
                            <PathIcon Data="{DynamicResource IconSettings}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    
                    <Separator/>
                    
                    <MenuItem Header="{x:Static lang:Resources.Menu_Exit}" Click="MenuItemExit_OnClick"/>
                </MenuItem>
                
                <MenuItem Header="{x:Static lang:Resources.MenuHeader_Edit}">
                    <MenuItem Header="{x:Static lang:Resources.Menu_Undo}" Name="MenuItemUndo"
                              Click="MenuItemUndo_OnClick" InputGesture="Ctrl+Z" />
                    <MenuItem Header="{x:Static lang:Resources.Menu_Redo}" Name="MenuItemRedo"
                              Click="MenuItemRedo_OnClick" InputGesture="Ctrl+Y" />
                    <Separator/>
                    <MenuItem Header="{x:Static lang:Resources.Menu_Cut}" Name="MenuItemCut" 
                              Click="MenuItemCut_OnClick" InputGesture="Ctrl+X" />
                    <MenuItem Header="{x:Static lang:Resources.Menu_Copy}" Name="MenuItemCopy" 
                              Click="MenuItemCopy_OnClick" InputGesture="Ctrl+C" />
                    <MenuItem Header="{x:Static lang:Resources.Menu_Paste}" Name="MenuItemPaste" 
                              Click="MenuItemPaste_OnClick" InputGesture="Ctrl+V" />
                </MenuItem>
                
                <!-- <MenuItem Header="{x:Static lang:Resources.MenuHeader_Select}">
                    <MenuItem Header="{DynamicResource L.SelectHighlightedNote}"
                              InputGesture="Shift+S" />
                    <MenuItem Header="{DynamicResource L.DeselectNotes}"
                              InputGesture="Shift+D" />
                </MenuItem> -->
                
                <!--<MenuItem Header="{DynamicResource L.ViewMenuItem}">
                </MenuItem>
                
                <MenuItem Header="{DynamicResource L.ChartMenuItem}">
                    <MenuItem Header="{DynamicResource L.InitialChartSettingsMenuOption}"/>
                </MenuItem> -->
            </Menu>
            <Panel Grid.Column="1" Background="{DynamicResource TitleBar}" IsHitTestVisible="False"/>
        </Grid>
        
        <!-- Left Panel -->
        <Grid RowDefinitions="*,Auto, Auto" Grid.Row="1" Grid.Column="0" Background="{DynamicResource DarkBrush}">  
            <ScrollViewer Grid.Row="0" Width="275" Name="LeftPanel">
                <Grid ColumnDefinitions="130,130">
                    <StackPanel Grid.Column="0" Width="130" Margin="5,5,5,0">
                        <Border   ClipToBounds="True" Classes="Outline">
                            <StackPanel>
                                <RadioButton Name="RadioNoteTouch" Classes="ToggleRadioStripe" 
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_Touch}" IsChecked="True"/>
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSlideClockwise" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SlideClockwise}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSlideCounterclockwise" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SlideCounterclockwise}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSnapForward" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SnapForward}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteSnapBackward" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_SnapBackward}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteChain" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_Chain}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteHold" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_Hold}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteMaskAdd" Classes="ToggleRadioStripe"
                                             BorderBrush="White" 
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_MaskAdd}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteMaskRemove" Classes="ToggleRadioStripe"
                                             BorderBrush="White"
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_MaskRemove}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioNoteEndOfChart" Classes="ToggleRadioStripe"
                                             BorderBrush="White" 
                                             IsCheckedChanged="RadioNoteType_IsCheckedChanged" GroupName="NoteType"
                                             Content="{x:Static lang:Resources.Note_EndOfChart}" />
                                    
                            </StackPanel>
                        </Border>

                        <!-- <Border   ClipToBounds="True" Classes="Outline" Margin="0,10,0,0">
                                <Button Classes="CompactButton" Margin="0,0" Click="ButtonEndHold_OnClick" Content="{DynamicResource L.EndHold}" />
                            </Border>-->

                        <Border   ClipToBounds="True" Classes="Outline" Margin="0,10,0,0" Name="BonusTypePanel">
                            <StackPanel>
                                <RadioButton Name="RadioNoBonus" IsChecked="True" GroupName="BonusType"
                                             Content="{x:Static lang:Resources.BonusType_None}" Margin="0,0"
                                             IsCheckedChanged="RadioBonusType_IsCheckedChanged" Classes="ToggleRadio" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioBonus" IsChecked="False" GroupName="BonusType"
                                             Content="{x:Static lang:Resources.BonusType_Bonus}" Margin="0,0"
                                             IsCheckedChanged="RadioBonusType_IsCheckedChanged" Classes="ToggleRadio" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioRNote" IsChecked="False" GroupName="BonusType"
                                             Content="{x:Static lang:Resources.BonusType_RNote}" Margin="0,0"
                                             IsCheckedChanged="RadioBonusType_IsCheckedChanged" Classes="ToggleRadio" />
                            </StackPanel>
                        </Border>
                            
                        <Border   ClipToBounds="True" Classes="Outline" Margin="0,10,0,0" Name="MaskDirectionPanel">
                            <StackPanel>
                                <RadioButton Name="RadioMaskClockwise" IsChecked="True"
                                             GroupName="MaskDirection" Classes="ToggleRadio"
                                             Content="{x:Static lang:Resources.MaskDirection_Clockwise}"
                                             IsCheckedChanged="MaskDirection_IsCheckedChanged" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioMaskCounterclockwise" IsChecked="False"
                                             GroupName="MaskDirection" Classes="ToggleRadio"
                                             Content="{x:Static lang:Resources.MaskDirection_Counterclockwise}"
                                             IsCheckedChanged="MaskDirection_IsCheckedChanged" />
                                    
                                <Separator Margin="0"/>
                                    
                                <RadioButton Name="RadioMaskCenter" IsChecked="False"
                                             GroupName="MaskDirection" Classes="ToggleRadio"
                                             Content="{x:Static lang:Resources.MaskDirection_Center}"
                                             IsCheckedChanged="MaskDirection_IsCheckedChanged" />
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    
                    <StackPanel Grid.Column="1" Width="130" Margin="0,5,5,0">
                        <Border   ClipToBounds="True" Classes="Outline">
                            <StackPanel>
                                <Button Name="ButtonGimmickBpmChange" Classes="CompactButton" Click="ButtonGimmickBpmChange_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_BpmChange}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickTimeSig" Classes="CompactButton" Click="ButtonGimmickTimeSig_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_TimeSigChange}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickHiSpeed" Classes="CompactButton" Click="ButtonGimmickHiSpeed_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_HiSpeedChange}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickStop" Classes="CompactButton" Click="ButtonGimmickStop_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_Stop}" />
                                    
                                <Separator Margin="0"/>
                                    
                                <Button Name="ButtonGimmickReverse" Classes="CompactButton" Click="ButtonGimmickReverse_OnClick"
                                        Content="{x:Static lang:Resources.Gimmick_Reverse}" />
                            </StackPanel>
                        </Border>
                            
                    </StackPanel>
                </Grid>
            </ScrollViewer>
                
            <Button Grid.Row="1" Grid.Column="0" Name="ButtonInsert" Click="ButtonInsert_OnClick"
                    Width="130" Height="45" CornerRadius="5" Margin="5,5,0,0"
                    HorizontalAlignment="Left" VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                    Content="{x:Static lang:Resources.Editor_Insert}"/>
        </Grid>
        
        <!-- Song Controls -->
        <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Height="65" Name="SongControlPanel"
              ColumnDefinitions="Auto, *">
            
            <Button Name="ButtonPlay" Click="ButtonPlay_OnClick"
                    Width="55" Height="55" CornerRadius="3"
                    Grid.Column="0" Margin="5">
                <Button.Content>
                    <Panel>
                        <PathIcon Data="{DynamicResource IconPlay}" Name="IconPlay"/>
                        <PathIcon Data="{DynamicResource IconStop}" Name="IconStop" IsVisible="False"/>
                    </Panel>
                </Button.Content>
            </Button>
            
            <Grid Grid.Column="1" RowDefinitions="Auto, Auto" ColumnDefinitions="Auto, Auto, *">
                <Slider Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Classes="Compact" Margin="10,0,15,0"
                        Name="SliderSongPosition" ValueChanged="SliderSongPosition_OnValueChanged"/>
                
                <Slider Grid.Row="1" Grid.Column="0" Classes="Compact" Width="200" HorizontalAlignment="Left" Margin="10,0,15,0" Name="SliderPlaybackSpeed"
                        Minimum="10" Maximum="200" Value="100" ValueChanged="SliderPlaybackSpeed_OnValueChanged"
                        TickPlacement="TopLeft" Ticks="0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200" IsSnapToTickEnabled="True"/>
                
                <TextBlock Grid.Row="1" Grid.Column="1" Text="100%" VerticalAlignment="Bottom" Name="TextBlockPlaybackSpeed"/>
            </Grid>
            
        </Grid>
        
    </Grid>
</UserControl>
